// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicStore.MVC.Persistence.Data;

namespace MusicStore.MVC.Migrations
{
  [DbContext(typeof(MusicStoreContext))]
  [Migration("20190416084323_Initial_Create")]
  partial class Initial_Create
  {
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
      modelBuilder
          .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
          .HasAnnotation("Relational:MaxIdentifierLength", 128)
          .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

      modelBuilder.Entity("MusicStore.MVC.Entities.AlbumEntity", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Description");

            b.Property<string>("Name");

            b.HasKey("Id");

            b.ToTable("Albums");
          });

      modelBuilder.Entity("MusicStore.MVC.Entities.GenreEntity", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<string>("Name");

            b.HasKey("Id");

            b.ToTable("Genres");
          });

      modelBuilder.Entity("MusicStore.MVC.Entities.GenreSongEntity", b =>
          {
            b.Property<int>("GenreId");

            b.Property<int>("SongId");

            b.HasKey("GenreId", "SongId");

            b.HasIndex("SongId");

            b.ToTable("GenreSongEntity");
          });

      modelBuilder.Entity("MusicStore.MVC.Entities.SongEntity", b =>
          {
            b.Property<int>("Id")
                      .ValueGeneratedOnAdd()
                      .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            b.Property<int?>("AlbumId");

            b.Property<string>("Name");

            b.HasKey("Id");

            b.HasIndex("AlbumId");

            b.ToTable("Songs");
          });

      modelBuilder.Entity("MusicStore.MVC.Entities.GenreSongEntity", b =>
          {
            b.HasOne("MusicStore.MVC.Entities.GenreEntity", "Genre")
                      .WithMany("GenreSong")
                      .HasForeignKey("GenreId")
                      .OnDelete(DeleteBehavior.Cascade);

            b.HasOne("MusicStore.MVC.Entities.SongEntity", "Song")
                      .WithMany("GenreSong")
                      .HasForeignKey("SongId")
                      .OnDelete(DeleteBehavior.Cascade);
          });

      modelBuilder.Entity("MusicStore.MVC.Entities.SongEntity", b =>
          {
            b.HasOne("MusicStore.MVC.Entities.AlbumEntity", "Album")
                      .WithMany("Songs")
                      .HasForeignKey("AlbumId")
                      .OnDelete(DeleteBehavior.SetNull);
          });
#pragma warning restore 612, 618
    }
  }
}
